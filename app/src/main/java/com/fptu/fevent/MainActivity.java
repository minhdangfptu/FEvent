package com.fptu.fevent;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.widget.Button;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.fptu.fevent.model.Notification;
import com.fptu.fevent.service.PushNotificationManager;
import com.fptu.fevent.ui.common.HomeActivity;
import com.fptu.fevent.util.NotificationPermissionHelper;

public class MainActivity extends AppCompatActivity {

    private PushNotificationManager pushNotificationManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        
        // Initialize push notification manager
        pushNotificationManager = new PushNotificationManager(this);
        
        // Request notification permission
        NotificationPermissionHelper.requestNotificationPermission(this);
        
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
        
        setupButtons();
    }
    
    private void setupButtons() {
        Button btnTestTaskAssigned = findViewById(R.id.btnTestTaskAssigned);
        Button btnTestTaskDeadline = findViewById(R.id.btnTestTaskDeadline);
        Button btnTestScheduleCreated = findViewById(R.id.btnTestScheduleCreated);
        Button btnTestScheduleReminder = findViewById(R.id.btnTestScheduleReminder);
        Button btnTestTaskOverdue = findViewById(R.id.btnTestTaskOverdue);
        Button btnGoToHome = findViewById(R.id.btnGoToHome);
        
        btnTestTaskAssigned.setOnClickListener(v -> testTaskAssignedNotification());
        btnTestTaskDeadline.setOnClickListener(v -> testTaskDeadlineNotification());
        btnTestScheduleCreated.setOnClickListener(v -> testScheduleCreatedNotification());
        btnTestScheduleReminder.setOnClickListener(v -> testScheduleReminderNotification());
        btnTestTaskOverdue.setOnClickListener(v -> testTaskOverdueNotification());
        btnGoToHome.setOnClickListener(v -> goToHome());
    }
    
    private void testTaskAssignedNotification() {
        Notification notification = new Notification(
            1, // user_id
            101, // task_id
            "üìù B·∫°n ƒë∆∞·ª£c giao c√¥ng vi·ªác m·ªõi!",
            "C√¥ng vi·ªác 'Chu·∫©n b·ªã b√°o c√°o th√°ng' ƒë√£ ƒë∆∞·ª£c giao cho b·∫°n. H·∫°n: 31/12/2024",
            "TASK_ASSIGNED",
            "HIGH"
        );
        notification.id = 1001;
        
        pushNotificationManager.showPushNotification(notification);
        Toast.makeText(this, "ƒê√£ g·ª≠i th√¥ng b√°o giao vi·ªác!", Toast.LENGTH_SHORT).show();
    }
    
    private void testTaskDeadlineNotification() {
        Notification notification = new Notification(
            1, // user_id  
            102, // task_id
            "‚è∞ C√¥ng vi·ªác s·∫Øp h·∫øt h·∫°n!",
            "C√¥ng vi·ªác 'Ho√†n thi·ªán presentation' s·∫Ω h·∫øt h·∫°n trong 1 gi·ªù n·ªØa. H√£y nhanh ch√≥ng ho√†n th√†nh!",
            "TASK_DEADLINE_1H",
            "URGENT"
        );
        notification.id = 1002;
        
        pushNotificationManager.showPushNotification(notification);
        Toast.makeText(this, "ƒê√£ g·ª≠i th√¥ng b√°o deadline 1h!", Toast.LENGTH_SHORT).show();
    }
    
    private void testScheduleCreatedNotification() {
        Notification notification = new Notification(
            1, // user_id
            201, // schedule_id  
            "üìÖ L·ªãch h·ªçp m·ªõi ƒë∆∞·ª£c t·∫°o",
            "Admin v·ª´a t·∫°o cu·ªôc h·ªçp 'H·ªçp team h√†ng tu·∫ßn' v√†o 31/12/2024 14:00 t·∫°i Ph√≤ng h·ªçp A101",
            "SCHEDULE_CREATED",
            "MEDIUM",
            true // isSchedule = true
        );
        notification.id = 1003;
        
        pushNotificationManager.showPushNotification(notification);
        Toast.makeText(this, "ƒê√£ g·ª≠i th√¥ng b√°o l·ªãch h·ªçp m·ªõi!", Toast.LENGTH_SHORT).show();
    }
    
    private void testScheduleReminderNotification() {
        Notification notification = new Notification(
            1, // user_id
            202, // schedule_id
            "üîî Cu·ªôc h·ªçp s·∫Øp b·∫Øt ƒë·∫ßu!",
            "Cu·ªôc h·ªçp 'Daily standup' s·∫Ω b·∫Øt ƒë·∫ßu trong 1 gi·ªù n·ªØa t·∫°i Ph√≤ng B202. H√£y chu·∫©n b·ªã s·∫µn s√†ng!",
            "SCHEDULE_REMINDER_1H", 
            "HIGH",
            true // isSchedule = true
        );
        notification.id = 1004;
        
        pushNotificationManager.showPushNotification(notification);
        Toast.makeText(this, "ƒê√£ g·ª≠i nh·∫Øc l·ªãch h·ªçp 1h!", Toast.LENGTH_SHORT).show();
    }
    
    private void testTaskOverdueNotification() {
        Notification notification = new Notification(
            1, // user_id
            103, // task_id
            "üö® C√¥ng vi·ªác ƒë√£ qu√° h·∫°n!",
            "C√¥ng vi·ªác 'Review code module login' ƒë√£ qu√° h·∫°n 2 ng√†y. Vui l√≤ng ho√†n th√†nh ngay!",
            "TASK_OVERDUE",
            "URGENT"
        );
        notification.id = 1005;
        
        pushNotificationManager.showPushNotification(notification);
        Toast.makeText(this, "ƒê√£ g·ª≠i th√¥ng b√°o qu√° h·∫°n!", Toast.LENGTH_SHORT).show();
    }
    
    private void goToHome() {
        Intent intent = new Intent(this, HomeActivity.class);
        startActivity(intent);
    }
    
    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        NotificationPermissionHelper.handlePermissionResult(this, requestCode, permissions, grantResults);
    }
}